// Generated by CoffeeScript 1.4.0
(function() {
  var bitcoin, config, file, fs, lazy;

  bitcoin = require('bitcoin');

  config = require('./config.json');

  fs = require('fs');

  lazy = require('lazy');

  exports.BitcoinClient = new bitcoin.Client(config.host, config.port, config.username, config.password);

  exports.createTransactionFromLine = function(line, cb) {
    line = line.split(' ');
    return fs.readFile(config.keyDir + line[0] + '.key', 'utf8', function(err, data) {
      var inputs, txnDetails, txnID, _i, _len, _ref;
      txnDetails = {};
      txnDetails[line[1]] = parseInt(line[2]);
      inputs = [];
      _ref = line.slice(3);
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        txnID = _ref[_i];
        inputs.push({
          txid: txnID,
          vout: 0
        });
      }
      return exports.BitcoinClient.createRawTransaction(inputs, txnDetails, function(err, txn) {
        return exports.BitcoinClient.signRawTransaction(txn, [], [data], function(err, signedTxn) {
          return cb(signedTxn.hex);
        });
      });
    });
  };

  if (process.argv.length > 2) {
    file = new lazy(fs.createReadStream(process.argv[2]));
    file.lines.forEach(function(line) {
      line = line.toString();
      return exports.createTransactionFromLine(line, function(txn) {
        return fs.writeFile(config.txnDir + line.replace(/\ /g, '_') + '.txn', txn);
      });
    });
  }

}).call(this);
